{
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "const": "https://json-schemas.lens.dev/profile/2.0.0.json"
    },
    "lens": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/$defs/NonEmptyString",
          "description": "A unique identifier that in storages like IPFS ensures the uniqueness of the metadata URI. Use a UUID if unsure."
        },
        "name": {
          "$ref": "#/$defs/NonEmptyString",
          "description": "The profile display name."
        },
        "bio": {
          "$ref": "#/$defs/NonEmptyString",
          "description": "The profile bio as markdown."
        },
        "picture": {
          "$ref": "#/$defs/Uri",
          "description": "The profile picture."
        },
        "coverPicture": {
          "$ref": "#/$defs/Uri",
          "description": "The profile cover picture."
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/MetadataAttribute"
          },
          "minItems": 1,
          "description": "A bag of attributes that can be used to store any kind of metadata that is not currently supported by the standard. Over time, common attributes will be added to the standard and their usage as arbitrary attributes will be discouraged."
        },
        "appId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "description": "The App Id that this Profile data refers to. If omitted the data is considered to be the global Profile data."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false,
      "description": "The Lens specific metadata details."
    },
    "signature": {
      "type": "string",
      "minLength": 1,
      "description": "A cryptographic signature of the Lens metadata."
    }
  },
  "required": [
    "$schema",
    "lens"
  ],
  "additionalProperties": false,
  "$defs": {
    "NonEmptyString": {
      "type": "string",
      "minLength": 1
    },
    "Uri": {
      "type": "string",
      "minLength": 6,
      "format": "uri",
      "description": "A Uniform Resource Identifier. "
    },
    "Markdown": {
      "$ref": "#/$defs/NonEmptyString"
    },
    "MetadataAttribute": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Boolean"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "description": "A JS boolean value serialized as string. It's consumer responsibility to parse it."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Date"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "type": "string",
              "format": "date-time",
              "description": "A valid ISO 8601 date string.  It's consumer responsibility to parse it."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Number"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "A valid JS number serialized as string. It's consumer responsibility to parse it."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "String"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "Any string value."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "JSON"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "A JSON string. It's consumer responsibility to validate and parse it."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        }
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
