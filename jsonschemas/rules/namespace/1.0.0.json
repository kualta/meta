{
  "type": "object",
  "properties": {
    "signature": {
      "type": "string",
      "minLength": 1,
      "description": "A cryptographic signature of the Lens metadata."
    },
    "$schema": {
      "type": "string",
      "const": "https://json-schemas.lens.dev/rules/namespace/1.0.0.json"
    },
    "lens": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/$defs/NonEmptyString",
          "description": "A unique identifier that in storages like IPFS ensures the uniqueness of the metadata URI. Use a UUID if unsure."
        },
        "name": {
          "$ref": "#/$defs/NonEmptyString",
          "description": "A short name for the Rule."
        },
        "title": {
          "$ref": "#/$defs/NonEmptyString",
          "description": "The human-friendly title for the Rule."
        },
        "description": {
          "$ref": "#/$defs/NonEmptyString",
          "description": "Markdown formatted description of the Rule."
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "email"
          },
          "minItems": 1,
          "description": "List of authors email addresses."
        },
        "source": {
          "type": "string",
          "minLength": 6,
          "format": "uri",
          "description": "The link to the Rule source code. Typically a GitHub repository."
        },
        "configureParams": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ContractKeyValuePairDescriptor"
          },
          "description": "A list of `ContractKeyValuePairDescriptor` that describes the `ruleParams` argument of the `configure` function."
        },
        "processCreationParams": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ContractKeyValuePairDescriptor"
          },
          "description": "A list of `ContractKeyValuePairDescriptor` that describes the `ruleParams` argument of the `processCreation` function."
        },
        "processRemovalParams": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ContractKeyValuePairDescriptor"
          },
          "description": "A list of `ContractKeyValuePairDescriptor` that describes the `ruleParams` argument of the `processRemoval` function."
        },
        "processAssigningParams": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ContractKeyValuePairDescriptor"
          },
          "description": "A list of `ContractKeyValuePairDescriptor` that describes the `ruleParams` argument of the `processAssigning` function."
        },
        "processUnassigningParams": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/ContractKeyValuePairDescriptor"
          },
          "description": "A list of `ContractKeyValuePairDescriptor` that describes the `ruleParams` argument of the `processUnassigning` function."
        }
      },
      "required": [
        "id",
        "name",
        "title",
        "description",
        "authors",
        "source",
        "configureParams",
        "processCreationParams",
        "processRemovalParams",
        "processAssigningParams",
        "processUnassigningParams"
      ],
      "additionalProperties": false
    }
  },
  "required": [
    "$schema",
    "lens"
  ],
  "additionalProperties": false,
  "$defs": {
    "NonEmptyString": {
      "type": "string",
      "minLength": 1
    },
    "MetadataAttribute": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Boolean"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "description": "A JS boolean value serialized as string. It's consumer responsibility to parse it."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Date"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "type": "string",
              "format": "date-time",
              "description": "A valid ISO 8601 date string.  It's consumer responsibility to parse it."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Number"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "A valid JS number serialized as string. It's consumer responsibility to parse it."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "String"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "Any string value."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "JSON"
            },
            "key": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "The attribute's unique identifier."
            },
            "value": {
              "$ref": "#/$defs/NonEmptyString",
              "description": "A JSON string. It's consumer responsibility to validate and parse it."
            }
          },
          "required": [
            "type",
            "key",
            "value"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ContractKeyValuePairDescriptor": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "minLength": 66,
          "maxLength": 66,
          "pattern": "^0x[0-9a-fA-F]{64}$",
          "description": "A unique 32 bytes long hexadecimal string key."
        },
        "name": {
          "$ref": "#/$defs/NonEmptyString",
          "description": "The human-readable name of the parameter."
        },
        "type": {
          "type": "string",
          "description": "The human-readable ABI description of the parameter."
        }
      },
      "required": [
        "key",
        "name",
        "type"
      ],
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
